{namespace validator.templates}

/**
 * Renders a basic explanation of the validation notice.
 * @param notices : List<[filename : string, fieldName : string, index : number]>
 */
{template .unknownColumnNotice}
{let $numNotices: length($notices)/}
  <p class="warning">Warning - Unknown Column(s) found!</p>
  <p>Description: A column name is unknown.</p>
  <p><b>{$numNotices}</b> unknown column(s) found in:</p>
  <table>
    <thead>
      <tr>
        <th>Filename</th>
        <th>Field name</th>
        <th>Index</th>
      </tr>
    </thead>
    <tbody>
      {foreach $notice in $notices}
        <tr>
          <td>{$notice.filename}</td>
          <td>{$notice.fieldName}</td>
          <td>{$notice.index}</td>
        </tr>
      {/foreach}
    </tbody>
  </table>
  <p>Please delete or rename column!</p>
  <br><br>
{/template}


/**
 * Renders a basic explanation of the validation notice.
 * @param notices : List<[filename : string, csvRowNumber : number, rowLength : number, headerCount : number]>
 */
{template .invalidRowLength}
{let $numNotices: length($notices)/}
  <p class="error">Error - Invalid csv row length!</p>
  <p>Description: A row in the input file has a different number of values than specified by the CSV header.</p>
  <p><b>{$numNotices}</b> Invalid row length found in:</p>
  <table>
    <thead>
      <tr>
        <th>Filename</th>
        <th>CSV Row Number</th>
        <th>Row length</th>
        <th>Header count</th>
      </tr>
    </thead>
    <tbody>
      {foreach $notice in $notices}
        <tr>
          <td>{$notice.filename}</td>
          <td>{$notice.csvRowNumber}</td>
          <td>{$notice.rowLength}</td>
          <td>{$notice.headerCount}</td>
        </tr>
      {/foreach}
    </tbody>
  </table>
  <p>Please set the row length as specified by the CSV header!</p>
  <br><br>
{/template}


/**
 * Renders a basic explanation of the validation notice.
 * @param notices : List<[stopId : string, csvRowNumber : number, locationType: number, parentStation : string, parentCsvRowNumber: number, parentLocationType: number, expectedLocationType: number]>
 */
{template .wrongParentLocationType}
{let $numNotices: length($notices)/}
  <p class="error">Error - Wrong parent location type!</p>
  <p>Description: Incorrect type of the parent location (e.g. a parent for a stop or an entrance must be a station).</p>
  <p><b>{$numNotices}</b> Wrong parent location type found in:</p>
  <table>
    <thead>
      <tr>
        <th>Stop ID</th>
        <th>CSV Row Number</th>
        <th>Location Type</th>
        <th>Parent Station</th>
        <th>Parent CSV Row Number</th>
        <th>Parent Location Type</th>
        <th>Expected Location Type</th>
      </tr>
    </thead>
    <tbody>
      {foreach $notice in $notices}
        <tr>
          <td>{$notice.stopId}</td>
          <td>{$notice.csvRowNumber}</td>
          <td>{$notice.locationType}</td>
          <td>{$notice.parentStation}</td>
          <td>{$notice.parentCsvRowNumber}</td>
          <td>{$notice.parentLocationType}</td>
          <td>{$notice.expectedLocationType}</td>
        </tr>
      {/foreach}
    </tbody>
  </table>
  <p>Please fix the parent location type(s) corresponding to the stop location type(s)!</p>
  <br><br>
{/template}


/**
 * Renders a basic explanation of the validation notice.
 * @param notices : List<[stopName : string, stopId1 : string, csvRowNumberStop1 : number, stopId2 : string, csvRowNumberStop2 : number, routeId : string, exampleTripId : string]>
 */
{template .tripWithDuplicateStops}
{let $numNotices: length($notices)/}
  <p class="warning">Warning - Trip with duplicate stops!</p>
  <p>Description: For a trip, consecutive stop times have the same stop name.</p>
  <p><b>{$numNotices}</b> Trip(s) with duplicate stops found in:</p>
  <table>
    <thead>
      <tr>
        <th>Stop Name</th>
        <th>Stop ID 1</th>
        <th>CSV Row Number Stop 1</th>
        <th>Stop ID 2</th>
        <th>CSV Row Number Stop 2</th>
        <th>Route ID</th>
        <th>Example Trip ID</th>
      </tr>
    </thead>
    <tbody>
      {foreach $notice in $notices}
        <tr>
          <td>{$notice.stopName}</td>
          <td>{$notice.stopId1}</td>
          <td>{$notice.csvRowNumberStop1}</td>
          <td>{$notice.stopId2}</td>
          <td>{$notice.csvRowNumberStop2}</td>
          <td>{$notice.routeId}</td>
          <td>{$notice.exampleTripId}</td>
        </tr>
      {/foreach}
    </tbody>
  </table>
  <p>Please fix the problem of stop names for the corresponding trip(s)!</p>
  <br><br>
{/template}